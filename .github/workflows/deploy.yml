name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build the application JAR
      - name: Build with Gradle
        run: ./gradlew clean build

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t cryptogpt:latest .
          docker save cryptogpt:latest > cryptogpt.tar

      # Step 5: Deploy to EC2
      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          PEM_FILE: ${{ secrets.EC2_PEM_FILE }}
        run: |
          echo "$PEM_FILE" > cryptoKP.pem
          chmod 400 cryptoKP.pem
          ssh -o StrictHostKeyChecking=no -i deploy_key.pem $USER@$HOST "sudo mkdir -p /home/ec2-user/app && sudo chown -R $USER:$USER /home/ec2-user/app"
          
          scp -o StrictHostKeyChecking=no -i cryptoKP.pem \
              build/libs/*.jar $USER@$HOST:/home/ec2-user/app/
          
          scp -o StrictHostKeyChecking=no -i deploy_key.pem cryptogpt.tar $USER@$HOST:/home/ec2-user/app/
          
          ssh -o StrictHostKeyChecking=no -i deploy_key.pem $USER@$HOST "
          cd /home/ec2-user/app &&
          sudo docker load < cryptogpt.tar &&
          sudo docker stop cryptogpt || true &&
          sudo docker rm cryptogpt || true &&
          sudo docker run -d -p 8080:8080 --name cryptogpt cryptogpt:latest
          "
          
          rm -f cryptoKP.pem
